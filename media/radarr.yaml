apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config-pv-claim
  namespace: media
  labels:
    k8s-app: radarr
spec:
  storageClassName: rook-block
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: radarr
  namespace: media
  labels:
    k8s-app: radarr
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: radarr
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - kubeworker
      containers:
      - name: radarr
        image: linuxserver/radarr:95
        env:
        - name: PUID
          value: "0"
        - name: PGID
          value: "0"
        ports:
        - containerPort: 7878
          name: ui
          protocol: TCP
        volumeMounts:
        - mountPath: /downloads 
          name: downloads
        - mountPath: /movies
          name: movies
        - mountPath: /config
          name: config
      volumes:
      - name: downloads
        hostPath:
          path: "/mnt/media/downloads"
      - name: movies
        hostPath:
          path: "/mnt/media/movies"
      - name: config
        persistentVolumeClaim:
          claimName: radarr-config-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: media
  labels:
    k8s-app: radarr
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "radarr"
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: ui
  selector:
    k8s-app: radarr
  type: LoadBalancer